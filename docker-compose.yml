version: '3.7'

services:
  web:
    build:
      context: ./app
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - POSTGRES_DB=app
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      - db
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

volumes:
  postgres_data:

# version: "3"

# services:
#   app:
#     restart: always
#     build:
#       context: .
#     ports:
#       - "8000:8000"
#     volumes:
#       - ./app:/app
#     command: >
#       sh -c "python manage.py wait_for_db &&
#              python manage.py makemigrations &&
#              python manage.py migrate &&
#              python manage.py collectstatic --noinput &&
#              python manage.py runserver 0.0.0.0:8000"
#     environment:
#       - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
#       - ALLOWED_HOSTS=${ALLOWED_HOSTS}
#       - DJANGO_DEBUG=${DJANGO_DEBUG}
#       - POSTGRES_DB=app
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_PASSWORD=${DB_PASS}

#     depends_on:
#       - db

#   db:
#     image: postgres:12
#     environment:
#       - POSTGRES_DB=app
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_PASSWORD=${DB_PASS}
#     volumes:
#       - postgres_data:/var/lib/postgresql/data/
  
#   nginx:
#     image: nginx:latest
#     ports:
#       - 80:8080
#     volumes:
#       - ./webserver/nginx-proxy.conf:/etc/nginx/conf.d
#     depends_on:
#       - app
      
# volumes:
#   postgres_data: