version: "3"

services:
  app:
    restart: always
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - POSTGRES_DB=app
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

    depends_on:
      - db

  db:
    image: postgres:12
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
  
  nginx:
    image: nginx:latest
    ports:
      - 80:8080
    volumes:
      - ./webserver/nginx-proxy.conf:/etc/nginx/conf.d #/default.conf:ro
    depends_on:
      - app


# version: "3"

# services:
#   app:
#     restart: always
#     build:
#       context: .
#     ports:
#       - "8000:8000"
#     volumes:
#       - ./app:/app
#     command: >
#       sh -c "python manage.py wait_for_db &&
#              python manage.py migrate &&
#              python manage.py runserver localhost:8000"
#     environment:
#       environment:
#         - DJANGO_SECRET_KEY="${DJANGO_SECRET_KEY}"
#         - "ALLOWED_HOSTS=${ALLOWED_HOSTS}"
#         - "DJANGO_DEBUG=${DJANGO_DEBUG}"
#         - "POSTGRES_DB=app"
#         - "POSTGRES_USER=${DB_USER}"
#         - "POSTGRES_PASSWORD=${DB_PASS}"
#     depends_on:
#       - db

#   db:
#     image: postgres:12
#     environment:
#       - POSTGRES_DB=app
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_PASSWORD=${DB_PASS}
  
#   nginx:
#     image: nginx:latest
#     ports:
#       - 80:8080
#     volumes:
#       - ./webserver/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
#     depends_on:
#       - app
